@model ZaiEats.ViewModels.MenuItemViewModel
@{
    ViewData["Title"] = "Create Menu Item";
}

<div class="max-w-md mx-auto mt-24 px-4 py-6 rounded-lg shadow-white shadow-sm bg-black text-white text-sm">
    <h2 class="text-lg font-bold text-center text-yellow-800 mb-4">Add Menu Item</h2>

    <form asp-action="CreateMenuItem" method="post" enctype="multipart/form-data" class="space-y-4">

        <!-- Restaurant -->
        <div>
            <label asp-for="RestaurantId" class="text-gray-400 mb-1 block">Restaurant</label>
            <select asp-for="RestaurantId" asp-items="Model.RestaurantList"
                    class="w-full border border-gray-600 bg-black text-white rounded px-3 py-1 text-sm"
                    id="restaurantSelect">
                <option disabled selected>-- Select Restaurant --</option>
            </select>

        </div>

        <!-- Category -->
        <div>
            <label asp-for="MenuCategoryId" class="text-gray-400 mb-1 block">Menu Category</label>
            <select asp-for="MenuCategoryId" id="categorySelect"
                    class="w-full border border-gray-600 bg-black text-white rounded px-3 py-1 text-sm">
                <option disabled selected>-- Select Category --</option>
            </select>

        </div>

        <!-- Name -->
        <div>
            <label asp-for="Name" class="text-gray-400 mb-1 block">Item Name</label>
            <input asp-for="Name"
                   class="w-full border border-gray-600 bg-transparent text-white rounded px-3 py-1 text-sm" />
        </div>

        <!-- Description -->
        <div>
            <label asp-for="Description" class="text-gray-400 mb-1 block">Description</label>
            <textarea asp-for="Description"
                      class="w-full border border-gray-600 bg-transparent text-white rounded px-3 py-1 text-sm"></textarea>
        </div>

        <!-- Price -->
        <div>
            <label asp-for="Price" class="text-gray-400 mb-1 block">Price</label>
            <input asp-for="Price" type="number" step="0.01"
                   class="w-full border border-gray-600 bg-transparent text-white rounded px-3 py-1 text-sm" />
        </div>

        <!-- Image -->
        <div>
            <label asp-for="ImageFile" class="text-gray-400 mb-1 block">Upload Image</label>
            <input asp-for="ImageFile" type="file"
                   class="w-full border border-gray-600 bg-transparent text-white rounded px-3 py-1 text-sm" />
        </div>

        <!-- Option Groups -->
        <div id="optionGroups" class="space-y-5"></div>

        <button type="button" onclick="addOptionGroup()"
                class="bg-gray-700 hover:bg-gray-600 text-white text-xs px-3 py-1.5 rounded shadow">
            + Add Option Group
        </button>

        <!-- Submit -->
        <button type="submit"
                class="w-full py-1.5 mt-3 bg-yellow-800 hover:bg-yellow-700 text-white font-semibold rounded-md transition text-sm">
            Save Menu Item
        </button>
    </form>
</div>

@section Scripts {
    <script>
        let groupCount = 0;

        function addOptionGroup() {
            const container = document.getElementById("optionGroups");
            const groupIndex = groupCount++;
            const html = `
                <div class="border border-gray-600 p-3 rounded bg-gray-800 text-white text-sm">
                    <label class="block text-gray-300 font-medium mb-1">Option Group Name</label>
                    <input name="OptionGroups[${groupIndex}].GroupName"
                           class="w-full mb-2 border border-gray-500 bg-transparent text-white rounded px-2 py-1" />

                           <label class="inline-flex items-center mb-2">
            <input type="hidden" name="OptionGroups[${groupIndex}].IsRequired" value="false" />
            <input type="checkbox"
        onchange="this.previousElementSibling.disabled = this.checked"
        name="OptionGroups[${groupIndex}].IsRequired"
        value="true"
        class="mr-2 w-4 h-4 text-yellow-600 bg-gray-700 border-gray-500 rounded" />

            <span class="text-sm text-gray-300">Required</span>
        </label>


                    <div id="options-${groupIndex}" class="space-y-2 mb-2"></div>

                    <button type="button" onclick="addOptionItem(${groupIndex})"
                            class="text-xs bg-gray-600 hover:bg-gray-500 text-white px-3 py-1 rounded">
                        + Add Option
                    </button>
                </div>
            `;
            container.insertAdjacentHTML("beforeend", html);
        }

        function addOptionItem(groupIndex) {
            const group = document.getElementById(`options-${groupIndex}`);
            const itemIndex = group.childElementCount;
            const html = `
                <div class="flex gap-3">
                    <input name="OptionGroups[${groupIndex}].OptionItems[${itemIndex}].OptionName"
                           placeholder="Option name"
                           class="w-1/2 border border-gray-500 bg-transparent text-white rounded px-2 py-1 text-sm" />
                     <input name="OptionGroups[${groupIndex}].OptionItems[${itemIndex}].AdditionalPrice"
        type="text" placeholder="Price (e.g., 42,50)"
                           class="w-1/2 border border-gray-500 bg-transparent text-white rounded px-2 py-1 text-sm" />
                </div>
            `;
            group.insertAdjacentHTML("beforeend", html);
        }
              document.getElementById('restaurantSelect').addEventListener('change', function () {
            var restaurantId = this.value;
            var categorySelect = document.getElementById('categorySelect');

            // Clear previous options
            categorySelect.innerHTML = '<option disabled selected>-- Select Category --</option>';

            fetch(`/Admin/GetCategoriesByRestaurant?restaurantId=${restaurantId}`)
                .then(response => response.json())
                .then(data => {
                    data.forEach(cat => {
                        var opt = document.createElement('option');
                        opt.value = cat.menuCategoryId;
                        opt.text = cat.name;
                        categorySelect.appendChild(opt);
                    });
                });
        });
    </script>
}
